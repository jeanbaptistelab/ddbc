language: d

# See: https://docs.travis-ci.com/user/trusty-ci-environment/#Routing-to-Trusty
sudo: required
dist: trusty
group: edge

# start most recent dmd and ldc first, then older versions. (don't bother with pre-release')
# For available compilers see: https://semitwist.com/travis-d-compilers
d:
  - ldc
  - dmd
  - dmd-2.079.0
  - dmd-2.078.3
  - dmd-2.077.1
  - dmd-2.076.1
  - dmd-2.075.1
  - ldc-1.8.0 # eq to dmd v2.078.3
  - ldc-1.7.0 # eq to dmd v2.077.1
  - ldc-1.6.0 # eq to dmd v2.076.1
  - ldc-1.5.0 # eq to dmd v2.075.1
  - gdc

# make sure our Mac build uses latest OS X. See: https://docs.travis-ci.com/user/reference/osx/#OS-X-Version
osx_image: xcode9

before_install:
 - "if [ ${TRAVIS_OS_NAME} = 'osx' ]; then brew update && brew install libevent sqlite && brew link --force sqlite; fi"

os:
 - linux
 - osx

script:
  - dub build --config=full --compiler=${DC}
  - dub run --config=test --compiler=${DC}
  - cd example && dub build --compiler=${DC} && ./ddbctest --connection=sqlite:ddbc-test.sqlite

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - libevent-dev
      - libsqlite3-dev
      - gcc-6

# GDC versions need to be setup with correct version of gcc
# The integration tests can only run in Linux container
matrix:
  include:
    - env: NAME="MySQL Integration Test with DUB upgrade"
      d: dmd
      os: linux
      service: mysql
      before_script: mysql -e 'CREATE DATABASE ddbctest;'
      script:
        - dub upgrade
        - dub build --config=full
        - cd example && dub build && ./ddbctest --connection=mysql:127.0.0.1 --database=ddbctest --user=root
    - env: NAME="MySQL Integration Test"
      d: dmd
      os: linux
      service: mysql
      before_script: mysql -e 'CREATE DATABASE ddbctest;'
      script:
        - dub build --config=full
        - cd example && dub build && ./ddbctest --connection=mysql:127.0.0.1 --database=ddbctest --user=root
    - env: NAME="PostgreSQL Integration Test"
      d: dmd
      os: linux
      service: postgresql
      before_script: psql -c 'create database ddbctest;' -U postgres
      script:
        - dub build --config=full
        - cd example && dub build && ./ddbctest --connection=pgsql:127.0.0.1 --database=ddbctest --user=postgres
  allow_failures:
    - d: gdc
